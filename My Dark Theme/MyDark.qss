/******************************************************************************/
/*   Copyright (C) 2014-2015 by Philippe Groarke <philippe.groarke@gmail.com> */
/*                                                                            */
/*                                                                            */
/*   This program is free software: you can redistribute it and/or modify     */
/*   it under the terms of the GNU General Public License as published by     */
/*   the Free Software Foundation, either version 2 of the License, or        */
/*   (at your option) any later version.                                      */
/*                                                                            */
/*   This program is distributed in the hope that it will be useful,          */
/*   but WITHOUT ANY WARRANTY; without even the implied warranty of           */
/*   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the            */
/*   GNU General Public License for more details.                             */
/*                                                                            */
/*   You should have received a copy of the GNU General Public License        */
/*   along with this program.  If not, see <http://www.gnu.org/licenses/>.    */
/******************************************************************************/

/* modified by ntoff https://github.com/ntoff */
/* rgba(072, 134, 212, 0.5); /* my blue light */
/* rgba(0, 95, 212, 0.5); /* my blue */
/* #375a7f; /* blue button light */
/* #21354b; /* blue button dark */
/* rgb(240, 200, 0); /* yellow button light */
/* rgb(140, 100, 0); /* yellow button dark */
/* rgb(195, 0, 0); /* red button light */
/* rgb(95, 0, 0); /* red button dark */
/* rgb(6, 80, 0); /* green button light */
/* rgb(6, 30, 0); /* green button light */

QMainWindow,
QDialog,
QWidget,
QMenuBar::item {
    background-color: #222; 
    alternate-background-color: rgb(31,30,31); 
    color: rgb(225,224,225); /* veryLight */
    selection-background-color: rgb(42,130,218); /* blue */
    selection-color: black;
    outline: none; /* no outline on selected items */
}

/* certain borders */
* [frameShape="1"], 
* [frameShape="2"], 
* [frameShape="3"], 
* [frameShape="4"], 
* [frameShape="5"], 
* [frameShape="6"] {
    border: 1px solid #464545;
}

/* Misc */

QWidget::disabled {
    color: 2px solid rgb(200,199,200); /* lighter */
}

/* scenes, sources, settings categories background */
QAbstractItemView {
    background-color: rgb(31,30,31); 
}

/* tooltips */
QToolTip {
    background-color: rgb(31,30,31); 
    color: rgb(205,205,205);
    border: none;
}

/* scenes & sources selected item colour (inactive window) */
QListWidget::item:selected:!active {
	color: rgb(239, 240, 241); 
	background-color: rgba(072, 134, 212, 0.5); /* my blue light */
	border: none;
}

/* scenes & sources selected item colour (active window) */
QListWidget::item:selected {
    color: rgb(239, 240, 241); 
	background-color: rgba(0, 95, 212, 0.5); /* my blue */
	border: none;
}

/* Group Box (groups in the settings dialog) */
QGroupBox {
    border: 1px solid #464545; 
    border-radius: 5px;
    padding-top: 16px;
}

/* ScrollBars */

::corner {
    background-color: rgb(58,57,58); 
    border: none;
}

QScrollBar:vertical {
    background-color: QLinearGradient(x1: 0, y1: 0, x2: 1, y2: 0,
        stop: 0 rgb(31,30,31), 
        stop: 0.75 rgb(54, 53, 54),
        stop: 1 rgb(58,57,58)); 
    width: 14px;
}

QScrollBar::handle:vertical {
    background-color: QLinearGradient(x1: 0, y1: 0, x2: 1, y2: 0,
        stop: 0 #21354b, 
        stop: 0.5 #375a7f,
        stop: 1 #21354b); 
    min-height: 20px;
    margin: 2px;
    border-radius: 5px;
    border-width: 1px;
    border: 1px solid rgb(31,30,31); 
}

QScrollBar::add-line:vertical, QScrollBar::sub-line:vertical {
    border: none;
    background: none;
}

QScrollBar::up-arrow:vertical, QScrollBar::down-arrow:vertical, QScrollBar::add-page:vertical, QScrollBar::sub-page:vertical {
    border: none;
    background: none;
    color: none;
}

QScrollBar:horizontal {
    background-color: QLinearGradient(x1: 0, y1: 0, x2: 0, y2: 1,
        stop: 0 rgb(31,30,31), 
        stop: 0.75 rgb(54, 53, 54),
        stop: 1 rgb(58,57,58)); 
    height: 14px;
}

QScrollBar::handle:horizontal {
    background-color: QLinearGradient(x1: 0, y1: 0, x2: 0, y2: 1,
        stop: 0 rgb(122,121,122), 
        stop: 0.25 rgb(100, 99, 100),
        stop: 1 rgb(88,87,88)); 
    min-width: 20px;
    margin: 2px;
    border-radius: 5px;
    border-width: 1px;
    border: 1px solid rgb(31,30,31); 
}

QScrollBar::add-line:horizontal, QScrollBar::sub-line:horizontal {
    border: none;
    background: none;
}

QScrollBar::left-arrow:horizontal, QScrollBar::right-arrow:horizontal, QScrollBar::add-page:horizontal, QScrollBar::sub-page:horizontal {
    border: none;
    background: none;
    color: none;
}


/* Scenes and Sources toolbar */

QToolBar {
    background-color: rgb(58,57,58); 
    border: none;
}

QToolButton:hover {
    background-color: rgb(122,121,122); 
    border-radius: none;
}

QToolButton:pressed {
    background-color: rgb(31,30,31); 
    border-radius: none;
}

* [themeID="addIconSmall"] {
    qproperty-icon: url(./MyDark/plus.png);
}

* [themeID="removeIconSmall"] {
    qproperty-icon: url(./MyDark/minus.png);
}

* [themeID="propertiesIconSmall"] {
    qproperty-icon: url(./MyDark/cogwheel.png);
}

* [themeID="configIconSmall"] {
    qproperty-icon: url(./MyDark/cogwheel.png);
}

* [themeID="upArrowIconSmall"] {
    qproperty-icon: url(./MyDark/up_arrow.png);
}

* [themeID="downArrowIconSmall"] {
    qproperty-icon: url(./MyDark/down_arrow.png);
}


/* Tab Widget */

QTabWidget::pane { /* The tab widget frame */
    border-top: 1px solid rgb(31,30,31); 
}

QTabWidget::tab-bar {
    alignment: center;
}

QTabBar::tab {
    background-color: rgb(88,87,88); 
    border: none;
    border-top-left-radius: 5px;
    border-top-right-radius: 5px;
    min-width: 8ex;
    padding-top: 4px;
    padding-bottom: 4px;
    padding-left: 10px;
    padding-right: 10px;
    margin-right: 1px;
}

QTabBar::tab:selected {
    background-color: rgb(31,30,31); 
}

QTabBar::tab:hover {
    background-color: rgb(122,121,122); 
}

QTabBar::tab:pressed {
    background-color: rgb(31,30,31); 
}


/* ComboBox */

QComboBox {
    background-color: QLinearGradient(x1: 0, y1: 0, x2: 0, y2: 1,
        stop: 0 rgb(86,85,86),
        stop: 0.1 rgb(82,81,82),
        stop: 0.5 rgb(78,77,78),
        stop: 0.9 rgb(74,73,74),
        stop: 1 rgb(70,69,70));
    border-style: solid;
    border: 1px;
    border-radius: 3px;
    border-color: rgb(31,30,31); 
    padding: 2px;
    padding-left: 10px;
}

QComboBox::drop-down {
    border:none;
    border-left: 1px solid rgba(31,30,31,155); 
    width: 20px;
}

QComboBox::down-arrow {
    qproperty-alignment: AlignTop;
    image: url(./MyDark/updown.png);
    width: 100%;
}

QComboBox:on {
    background-color: rgb(31,30,31); 
}

QComboBox:editable {
    border-top-left-radius: 0px;
    border-bottom-left-radius: 0px;
}

QComboBox::drop-down:editable {
    border-top-right-radius: 3px;
    border-bottom-right-radius: 3px;
}

QComboBox::down-arrow:editable {
    qproperty-alignment: AlignTop;
    image: url(./MyDark/down_arrow.png);
    width: 8%;
}


/* Textedits etc */

QLineEdit, QTextEdit, QPlainTextEdit {
    background-color: rgb(101,100,101); 
    color: #fff;
    border: none;
    padding-left: 2px;
    border-radius: 3px;
}


/* Spinbox and doubleSpinbox */

QSpinBox, QDoubleSpinBox {
    background-color: rgb(101,100,101); 
    border: none;
    padding-left: 2px;
    padding-right: 15px;
    margin-right: 10px;
    border-radius: 3px;
}

QSpinBox::up-button, QDoubleSpinBox::up-button {
    subcontrol-origin: margin;
    subcontrol-position: top right; /* position at the top right corner */

    background-color: rgb(88,87,88); 
    border: 1px solid rgb(31,30,31); 
    border-radius: 3px;
    border-width: 0;
    border-bottom-left-radius: 0;
    border-bottom-right-radius: 0;
    border-bottom-width: 0;
}

QSpinBox::down-button, QDoubleSpinBox::down-button {
    subcontrol-origin: margin;
    subcontrol-position: bottom right; /* position at the top right corner */
    background-color: rgb(88,87,88); 
    border: 1px solid rgb(31,30,31); 
    border-radius: 3px;
    border-width: 0;
    border-top-left-radius: 0;
    border-top-right-radius: 0;
    border-top-width: 0;
}

QSpinBox::up-button:hover, QSpinBox::down-button:hover, QDoubleSpinBox::up-button:hover, QDoubleSpinBox::down-button:hover {
    background-color: rgb(122,121,122); 
}

QSpinBox::up-button:pressed, QSpinBox::down-button:pressed, QDoubleSpinBox::up-button:pressed, QDoubleSpinBox::down-button:pressed {
    background-color: rgb(58,57,58); 
}

QSpinBox::up-button:disabled, QSpinBox::up-button:off, QSpinBox::down-button:disabled, QSpinBox::down-button:off {
    background-color: rgb(58,57,58); 
}

QDoubleSpinBox::up-button:disabled, QDoubleSpinBox::up-button:off, QDoubleSpinBox::down-button:disabled, QDoubleSpinBox::down-button:off {
    background-color: rgb(58,57,58); 
}

QSpinBox::up-arrow, QDoubleSpinBox::up-arrow {
    image: url(./MyDark/up_arrow.png);
    width: 100%;
}

QSpinBox::down-arrow, QDoubleSpinBox::down-arrow {
    image: url(./MyDark/down_arrow.png);
    width: 100%;
}


/* Buttons */

QPushButton {
    color: rgb(225,224,225); /* veryLight */
    background-color: rgb(88,87,88); 
    border: none;
    border-radius: 3px;
    padding: 4px;
    padding-left: 20px;
    padding-right: 20px;
}

QPushButton::flat {
    background-color: rgb(58,57,58); 
}

QPushButton:hover {
    background-color: rgb(122,121,122); 
}

QPushButton:pressed {
    background-color: rgb(31,30,31); 
}

QPushButton:checked {
    background-color: rgb(122,121,122); 
}

/* Main UI Button Overrides */
QPushButton#streamButton,
QPushButton#recordButton,
QPushButton[themeID="replayBufferButton"],
QPushButton#modeSwitch,
QPushButton#settingsButton,
QPushButton#exitButton {
    background-color: qlineargradient(x1: 0, y1: 0.3, x2: 0, y2: 1,
        stop: 0 #375a7f, 
        stop: 1 #21354b);
    border: 1px solid #8f8f91;
    border-radius: 6px;    
}

/* Stream button yellow*/
QPushButton#streamButton {
    background-color: qlineargradient(x1: 0, y1: 0.3, x2: 0, y2: 1,
        stop: 0 rgb(240, 200, 0), 
        stop: 1 rgb(140, 100, 0));
    color: rgb(20,20,20);
}

/* Record button red*/
QPushButton#recordButton {
    background-color: qlineargradient(x1: 0, y1: 0.3, x2: 0, y2: 1,
        stop: 0 rgb(195, 0, 0), 
        stop: 1 rgb(95, 0, 0));
    color: rgb(239, 240, 241); 
}

/* Replay Buffer button green*/
QPushButton[themeID="replayBufferButton"] {
    background-color: qlineargradient(x1: 0, y1: 0.3, x2: 0, y2: 1,
        stop: 0 rgb(6, 80, 0), 
        stop: 1 rgb(6, 30, 0));
    color: rgb(239, 240, 241);     
}

/* Button Hover */
QPushButton:hover#streamButton,
QPushButton:hover#recordButton,
QPushButton:hover[themeID="replayBufferButton"],
QPushButton:checked:hover[themeID="replayBufferButton"],
QPushButton:hover#modeSwitch,
QPushButton:checked:hover#modeSwitch,
QPushButton:hover#settingsButton,
QPushButton:hover#exitButton {
	background-color: rgba(0, 188, 212, 0.5);
    border: 2px solid #8f8f91;
}

/* Button Pressed */
QPushButton:pressed#streamButton,
QPushButton:pressed#recordButton,
QPushButton:pressed[themeID="replayBufferButton"],
QPushButton:checked:pressed[themeID="replayBufferButton"],
QPushButton:pressed#modeSwitch,
QPushButton:checked:pressed#modeSwitch,
QPushButton:pressed#settingsButton,
QPushButton:pressed#exitButton {
	background-color: rgba(200, 188, 212, 0.5);
}

/* only the mode switch button supports states at the moment */
QPushButton:checked#modeSwitch {
	background-color: qlineargradient(x1: 0, y1: 0, x2: 1, y2: 0,
        stop: 0 #375a7f,
        stop: 0.5 rgb(5, 5, 5),
        stop: 1 #375a7f);     
}

/* Sliders */

QSlider::groove:horizontal {
    background-color: QLinearGradient(x1: 0, y1: 0, x2: 0, y2: 1,
        stop: 0 rgb(31,30,31), 
        stop: 0.75 rgb(50, 49, 50));
    height: 4px;
    border: none;
    border-radius: 2px;
}

QSlider::handle:horizontal {
    background-color: QLinearGradient(x1: 0, y1: 0, x2: 0, y2: 1,
        stop: 0 rgb(240,8,8), 
        stop: 0.25 rgb(200,100,100),
        stop: 1 rgb(240,8,8)); 
    border: 1px solid rgb(58,57,58); 
    border-radius: 3px;
    height: 10px;
    width: 18px;
    margin: -3px 0; /* handle is placed by default on the contents rect of the groove. Expand outside the groove */
}

QSlider::handle:horizontal:pressed {
    background-color: QLinearGradient(x1: 0, y1: 1, x2: 0, y2: 0,
        stop: 0 rgb(240,8,8), 
        stop: 0.25 rgb(200,100,100),
        stop: 1 rgb(240,8,8));
}

QSlider::sub-page:horizontal:disabled {
    background-color: QLinearGradient(x1: 0, y1: 0, x2: 0, y2: 1,
        stop: 0 rgb(31,30,31), 
        stop: 0.75 rgb(50, 49, 50));
    border-radius: 2px;
}

QSlider::groove:vertical {
    background-color: QLinearGradient(x1: 0, y1: 0, x2: 1, y2: 0,
        stop: 0 rgb(31,30,31), 
        stop: 0.75 rgb(50, 49, 50));
    width: 4px;
    border: none;
    border-radius: 2px;
}

QSlider::handle:vertical {
    background-color: QLinearGradient(x1: 0, y1: 0, x2: 1, y2: 0,
        stop: 0 rgb(240,239,240), /* lighter */
        stop: 0.25 rgb(200,199,200),
        stop: 1 rgb(162,161,162)); 
    border: 1px solid rgb(58,57,58); 
    border-radius: 4px;
    width: 10px;
    height: 18px;
    margin: -3px 0; /* handle is placed by default on the contents rect of the groove. Expand outside the groove */
}

QSlider::handle:vertical:pressed {
    background-color: QLinearGradient(x1: 1, y1: 0, x2: 0, y2: 0,
        stop: 0 rgb(240,239,240), /* lighter */
        stop: 0.25 rgb(200,199,200),
        stop: 1 rgb(162,161,162)); 
}

QSlider::sub-page:vertical:disabled {
    background-color: QLinearGradient(x1: 0, y1: 0, x2: 1, y2: 0,
        stop: 0 rgb(31,30,31), 
        stop: 0.75 rgb(50, 49, 50));
    border-radius: 2px;
}

QSlider::handle:hover {
    background-color: rgb(200,199,200); /* veryLight */
}

QSlider::sub-page {
    background-color: rgb(42,130,218); /* blue */
    border-radius: 2px;
}

QSlider::handle:disabled {
    background-color: rgb(122,121,122); 
}

/* Status Bar*/

QStatusBar::item {
    border: none;
} 

/* Mute CheckBox */

MuteCheckBox {
    outline: none;
}

MuteCheckBox::indicator:checked {
    image: url(./MyDark/mute.png);
}

MuteCheckBox::indicator:unchecked {
    image: url(./MyDark/unmute.png);
}

OBSHotkeyLabel[hotkeyPairHover=true] {
    color: rgba(072, 134, 212, 1);
}


/* Label warning/error */

QLabel#warningLabel {
    color: rgb(192, 128, 0);
    font-weight: bold;
}

QLabel#errorLabel {
    color: rgb(192, 0, 0);
    font-weight: bold;
}

* [themeID="warning"] {
    color: rgb(192, 128, 0);
    font-weight: bold;
}

* [themeID="error"] {
    color: rgb(192, 0, 0);
    font-weight: bold;
}

* [themeID="good"] {
    color: rgb(0, 192, 0);
    font-weight: bold;
}

/**************************/
/* --- Volume Control --- */
/**************************/

VolumeMeter {
	qproperty-bkColor: rgb(35, 38, 41); /* Dark Gray */
	qproperty-magColor: #76dc2b;
    qproperty-peakColor: rgb(230, 40, 50);
    /*qproperty-magColor: rgb(072, 134, 212);
    qproperty-peakColor: rgb(0, 95, 212);*/
	qproperty-peakHoldColor: rgb(210, 255, 77);
	qproperty-clipColor1: rgb(230, 40, 50);
    qproperty-clipColor2: rgb(140, 0, 40);
}
